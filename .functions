function npmify() {
    ngenplus $1 $2
    nstart
}

function nstart() {
    git init
    git add .
    git commit -m "initial"
    hub create Raynos/$(basename $PWD)
    travisify
    travisify test
    npublish
}

function colingo-nstart() {
    git init
    git add .
    git commit -m "initial"
    hub create Colingo/$(basename $PWD)
    travisify
    travisify test
    npublish
}

function ngenplus() {
    local projectName=$1
    local isFree=""

    isFree="$(npm info $projectName 2>&1 | grep 'npm ERR! 404 You should bug the author to publish it')"

    # if $isFree is empty then BAD. If it's not empty then GOOD
    if [[ ! -n "$isFree" ]]; then
        echo "$projectName already taken on npm"
        npm info ${projectName} name description author
        return
    fi

    local fileLocation="$(pwd)/$2"

    cd ~/projects
    ngen $1
    cd $1

    if [ ! -z $2 ]; then
        cp "$fileLocation" ./index.js
    fi

    npm i
}

function colingo-ngenplus() {
    local projectName=$1
    local isFree=""

    isFree="$(npm info $projectName 2>&1 | grep 'npm ERR! 404 You should bug the author to publish it')"

    # if $isFree is empty then BAD. If it's not empty then GOOD
    if [[ ! -n "$isFree" ]]; then
        echo "$projectName already taken on npm"
        npm info ${projectName} name description author
        return
    fi

    local fileLocation="$(pwd)/$2"

    cd ~/projects
    colingo-ngen $1
    cd $1

    if [ ! -z $2 ]; then
        cp "$fileLocation" ./index.js
    fi

    npm i
}

function merge_pull_request() {
  local url="$1"
  if [ "$url" == "" ] && type pbpaste &>/dev/null; then
    url="$(pbpaste)"
  fi
  if [[ "$url" =~ ^[0-9]+$ ]]; then
    local us="$2"
    if [ "$us" == "" ]; then
      us="origin"
    fi
    local num="$url"
    local o="$(git config --get remote.${us}.url)"
    url="${o}"
    url="${url#(git:\/\/|https:\/\/)}"
    url="${url#git@}"
    url="${url#github.com[:\/]}"
    url="${url%.git}"
    url="https://github.com/${url}/pull/$num"
  fi
  local p='^https:\/\/github.com\/[^\/]+\/[^\/]+\/pull\/[0-9]+$'
  if ! [[ "$url" =~ $p ]]; then
    echo "Usage:"
    echo "  pr <pull req url>"
    echo "  pr <pull req number> [<remote name>=origin]"
    type pbpaste &>/dev/null &&
      echo "(will read url/id from clipboard if not specified)"
    return 1
  fi
  local root="${url/\/pull\/+([0-9])/}"
  local ref="refs${url:${#root}}/head"
  echo git pull $root $ref
  git pull $root $ref
}

# TODO: write function
function github_pr() {
    # git push origin master
    # hub pull-request to github master
    # hub merge pull request
    # git pull github master
}

function testem-node() {
    testem --file="$HOME/testem/node.json"
}

function testem-browser() {
    testem --file="$HOME/testem/browser.json"
}

function testem-both() {
    testem --file="$HOME/testem/both.json"
}
